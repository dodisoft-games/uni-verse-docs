{"0": {
    "doc": "Asset Store",
    "title": "The Asset Store component",
    "content": "The Asset Store component is probably the most important part of Uni-verse Studio as it allows you to develop your games quickly and efficiently. You can make your own game components, sell them in the Asset Store and earn Uni-credits, or you can spend your Uni-credits to buy components developed by others. Use these components as building blocks to create the game of your dreams! . You can buy and sell many different types of assets in the Asset Store: characters, models, animations, sounds, music, textures, scripts, scenes, effects, terrains and even complete games! Using your purchased assets in your game is very easy: all you have to do is to click Import after purchasing the asset you like. ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/asset-store.html#the-asset-store-component",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/asset-store.html#the-asset-store-component"
  },"1": {
    "doc": "Asset Store",
    "title": "Asset Store",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/asset-store.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/asset-store.html"
  },"2": {
    "doc": "Characters",
    "title": "Characters",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/characters.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/characters.html"
  },"3": {
    "doc": "Coding",
    "title": "The Coding component",
    "content": "The Coding component is an integrated development environment for creating and editing scripts for your game. It has all the features you would expect from an IDE; line numbering, syntax highlighting, auto-complete and many more! The best thing about the Coding component is that you don’t have to leave your editor to edit your scripts. ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/coding.html#the-coding-component",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/coding.html#the-coding-component"
  },"4": {
    "doc": "Coding",
    "title": "Coding",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/coding.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/coding.html"
  },"5": {
    "doc": "Console",
    "title": "Console",
    "content": "The Console component shows errors and warnings generated by the editor. It’s basically your game trying to communicate with you. It’s very natural in game development to make mistakes, and when you make any, the editor will tell you what’s happening and will give you hints on how to fix it in this component. When your game is happy, you’ll see green texts in this window just like the screenshot below: . This component is quite simple; there is only 3 buttons to interact with it: . | Clear: Gets rid of the text that’s occupying the Console component so that you can better focus on the incoming messages. | Export: Saves the messages in a text file so that you can share it with co-workers, customer support or other fellow developers on the internet to get help with your problem. | Enable: Enables or disables messages from your game. | . ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/console.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/console.html"
  },"6": {
    "doc": "Creating Gameplay",
    "title": "Creating Gameplay",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/creating-gameplay.html",
    
    "relUrl": "/working-in-universe-studio/creating-gameplay.html"
  },"7": {
    "doc": "Editor Features",
    "title": "Editor Features",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/editor-features.html",
    
    "relUrl": "/working-in-universe-studio/editor-features.html"
  },"8": {
    "doc": "Hierarchy",
    "title": "The Hierarchy component",
    "content": "This component lists all your objects in your scene. Anything you put into your scene will be here: lights, cameras, objects etc. You can add more things into your scene simply by dragging and dropping from your Project component or by right-clicking into the Hierarchy component and choosing the appropriate action to create a light, a camera or an empty UniObject. An empty UniObject can be a functional in game object by adding the necessary scripts on it, or you can use it to organize your hierarchy. ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/hierarchy.html#the-hierarchy-component",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/hierarchy.html#the-hierarchy-component"
  },"9": {
    "doc": "Hierarchy",
    "title": "Hierarchy",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/hierarchy.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/hierarchy.html"
  },"10": {
    "doc": "Uni-verse Interface",
    "title": "Uni-verse Interface",
    "content": "Once you’ve installed Uni-verse Studio, simply double-click the shortcut on your desktop to kickstart your game creation journey. The create user screen will welcome you. Enter your details to set up your developer account. After successfully creating your account, use your login details to sign in. The Uni-verse Project Explorer will then be visible. Click on the plus icon to initiate your first project. Provide a name for your project and click OK. Your project will be created and you will be taken to the editor screen which starts up with 5 windows by default. | The Toolbar has controls for building and playing your game. | The Hierarchy component is a hierarchical representation of your Scene. | The Scene component is the window where you construct your game visually in 3D. | The Inspector component displays the properties of your objects in your scenes. It also lets you modify them to your liking. | The Project component lists all the assets that are available to you. Think of this as your library. You can import more assets to your project either by importing them manually or visiting the Uni-verse Asset Store. | . Other than these 5 main components, there are inactive components which you can access by clicking the relevant tabs. | The Store component lets you buy and import assets from Uni-verse Asset Store. Uni-verse developers have created numerous free assets that you are welcome to use in your games without any cost. | The Coding component is where you create and edit your scripts. | The Characters component has two simple functionalities: upload your characters or create new ones. | The Console component shows errors, warnings and messages generated by Uni-verse Studio. | The Tools component provides the tools to maintain your project such as backup, upload assets, check dependencies and an export wizard. | The Settings component . | The Voxel component . | The Terrain component . | The UniUI component is where the magic unfolds. This is your space to craft captivating user interfaces, allowing your players to seamlessly interact with your game. | . ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/"
  },"11": {
    "doc": "Working in Uni-verse Studio",
    "title": "Working in Uni-verse Studio",
    "content": "This section explains how to use Uni-verse Studio to create your own games. | Installing Uni-verse Studio If you encounter any difficulties while installing Uni-verse Studio, refer to this guide for user-friendly instructions to assist you. | Uni-verse Interface Delve into a comprehensive exploration of the primary windows you’ll regularly utilize in Uni-verse Studio . | Editor Features Discover details about numerous potent features within Uni-verse Editor, empowering you to tailor your workflow and seamlessly integrate with external tools. | Creating Gameplay Let’s make a game, shall we? . | Quickstart Guide Already experienced and anxious to dive into developing magical experiences with Uni-verse Studio? Check out our Quickstart Guide for your first 1-day project! . | . ",
    "url": "/uni-verse-docs/working-in-universe-studio/",
    
    "relUrl": "/working-in-universe-studio/"
  },"12": {
    "doc": "Inspector",
    "title": "Inspector",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/inspector.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/inspector.html"
  },"13": {
    "doc": "Installing Uni-verse Studio",
    "title": "Installing Uni-verse Studio",
    "content": "Uni-verse Studio is the application to create the games of your dreams in Uni-verse. ",
    "url": "/uni-verse-docs/working-in-universe-studio/installing-uni-verse-studio.html",
    
    "relUrl": "/working-in-universe-studio/installing-uni-verse-studio.html"
  },"14": {
    "doc": "Installing Uni-verse Studio",
    "title": "System Requirements",
    "content": "For Uni-verse Studio to function smoothly, make sure your system meets these specifications: . | Windows (64-bit) – Windows 7, 8, 8.1, 10, or 11. | Mac – macOS 10.13 (High Sierra) and above. | Processor – Processor with a clock speed of 1.6 GHz or better. | RAM – 4 GB of system memory. | Hard Disk – At least 10 GB of available hard disk space after installation. | Graphics Card – A computer less than 5 years old with a dedicated video card or a laptop less than 3 years old with an integrated video card. | Internet Access – At least 4-8 MB/s to keep Studio up-to-date and save projects to your Roblox account. | . To install Uni-verse Studio: . | Go to create.universe.com. | Click the MAKE GAMES button to download the installer. | Find the Uni-verse Studio installer in your browser’s download history and double-click the file (it’s UniverseStudio.exe for Windows and UniverseStudio.dmg for Mac) . | After installing see Uni-verse Interface to start creating your games. | . ",
    "url": "/uni-verse-docs/working-in-universe-studio/installing-uni-verse-studio.html#system-requirements",
    
    "relUrl": "/working-in-universe-studio/installing-uni-verse-studio.html#system-requirements"
  },"15": {
    "doc": "Project",
    "title": "Project",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/project.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/project.html"
  },"16": {
    "doc": "Publishing",
    "title": "Publishing",
    "content": " ",
    "url": "/uni-verse-docs/publishing.html",
    
    "relUrl": "/publishing.html"
  },"17": {
    "doc": "Quickstart Guide",
    "title": "Quickstart Guide",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/quickstart-guide.html",
    
    "relUrl": "/working-in-universe-studio/quickstart-guide.html"
  },"18": {
    "doc": "Scene",
    "title": "The Scene component",
    "content": "The Scene component is a visual reprentation of your hierarchy, a window to your game where you modify and re-arrange your objects. In order to move, rotate or resize your objects, either select them in your Hierarchy component or simply click on them in the Scene component, and click and drag the handles that appear on your object. Alternatively you can modify the position, rotation and scale values within the Inspector component when your object is selected. ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/scene.html#the-scene-component",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/scene.html#the-scene-component"
  },"19": {
    "doc": "Scene",
    "title": "Scene",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/scene.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/scene.html"
  },"20": {
    "doc": "Settings",
    "title": "Settings",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/settings.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/settings.html"
  },"21": {
    "doc": "Terrain",
    "title": "Terrain",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/terrain.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/terrain.html"
  },"22": {
    "doc": "Toolbar",
    "title": "The Toolbar",
    "content": "The toolbar is the first thing you see at the top of your window when you start your editor. It contains the controls to start/stop/pause playing your game and a few menus to interact with your project. ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/toolbar.html#the-toolbar",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/toolbar.html#the-toolbar"
  },"23": {
    "doc": "Toolbar",
    "title": "Play/Stop/Pause buttons",
    "content": "Press the play button to start playing your game within the editor, and press the stop button to stop playing. If you would like to inspect a frame or your code when something specific happens, press the pause button to temporarily pause your game. ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/toolbar.html#playstoppause-buttons",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/toolbar.html#playstoppause-buttons"
  },"24": {
    "doc": "Toolbar",
    "title": "Project menu",
    "content": "This menu includes controls for the following actions: . | Open: Opens another project. | Add new: Creates a new folder or a script file | Save file: Saves the current script file or the scene. | Save all: Saves all modified files and scenes. | Close: Closes the current projects. | . ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/toolbar.html#project-menu",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/toolbar.html#project-menu"
  },"25": {
    "doc": "Toolbar",
    "title": "Edit menu",
    "content": "This menu includes controls for the following actions: . | Auto save: Saves all modified files when a change is detected. | Zoom: Increases/decreases the size of the UI elements in the editor. | . ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/toolbar.html#edit-menu",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/toolbar.html#edit-menu"
  },"26": {
    "doc": "Toolbar",
    "title": "Build menu",
    "content": "This menu includes controls for the following actions: . | Build: Compiles all script files into machine code to play your game. Uni-verse Editor does that automatically for you but if you want to force a compile yourself, you can use this button. | Play: Starts playing your game. | Stop: Stops playing your game. | Pause/stop: Pauses your game. | . ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/toolbar.html#build-menu",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/toolbar.html#build-menu"
  },"27": {
    "doc": "Toolbar",
    "title": "Tests menu",
    "content": ". | Bundle creation: | . ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/toolbar.html#tests-menu",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/toolbar.html#tests-menu"
  },"28": {
    "doc": "Toolbar",
    "title": "Toolbar",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/toolbar.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/toolbar.html"
  },"29": {
    "doc": "Tools",
    "title": "Tools",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/tools.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/tools.html"
  },"30": {
    "doc": "Uni UI",
    "title": "Uni UI",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/uniui.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/uniui.html"
  },"31": {
    "doc": "Voxel",
    "title": "Voxel",
    "content": " ",
    "url": "/uni-verse-docs/working-in-universe-studio/uni-verse-interface/voxel.html",
    
    "relUrl": "/working-in-universe-studio/uni-verse-interface/voxel.html"
  },"32": {
    "doc": "What is Uni-verse?",
    "title": "What is Uni-verse?",
    "content": "Uni-verse is your online platform and game creation system, giving you the tools to design and create your own games, or play the ones that are crafted by others. With a variety of features, Uni-verse lets you develop your games using a scripting programming language very similar to C#. In Uni-verse, you can explore a vast virtual universe filled with a range of games and experiences, from simple obstacle courses to complex simulations and role-playing adventures. You can customize your avatars and purchase virtual items using the in-game currency called UniCron. Moveroever, you can easily publish your games or assets you have created on Uni-verse Asset Store, reaching out to other players while earning money. To learn more about the publishing aspect of Uni-verse, see Publishing. ",
    "url": "/uni-verse-docs/what-is-uni-verse.html",
    
    "relUrl": "/what-is-uni-verse.html"
  },"33": {
    "doc": "What is Uni-verse?",
    "title": "What is Uni-verse Studio?",
    "content": "Uni-verse Studio is a cross-platform game development engine that allows you to develop your own games to play in Uni-verse. Key features of Uni-verse Studio include: . | Cross-platform development: Uni-verse supports the development of games for various platforms, including Windows, macOS, Linux, Android and iOS. This allows you to create games that can run on multiple devices without significant modifications. | Asset store: Uni-verse has an extensive Asset Store where you can find and sell assets, including 3D models, textures, audio, and pre-built scripts. This makes it easier for you to access resources and accelerate the game development process. | Scripting with C#: Uni-verse uses the C# programming language for scripting, providing a user-friendly and versatile coding environment. C# is widely used in the game development industry and offers a good balance between performance and ease of use. | Publishing within Uni-verse: Uni-verse Studio allows you to deploy your games to Uni-verse eco-system with one click. | Community and support: Uni-verse Studio has a large and active community of developers who share knowledge, resources, and support through forums and online communities. Uni-verse offers a variety of sample games, making it exceptionally user-friendly for beginners who find it easy to initiate development with these provided examples. | . ",
    "url": "/uni-verse-docs/what-is-uni-verse.html#what-is-uni-verse-studio",
    
    "relUrl": "/what-is-uni-verse.html#what-is-uni-verse-studio"
  }
}
